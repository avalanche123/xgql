"""
Query is the root type for GraphQL queries.
"""
type Query {
  """
  Providers that are currently installed.
  """
  providers: ProviderConnection!

  """
  Configurations that are currently installed.
  """
  configurations: ConfigurationConnection!

  """
  Composite Resource Definitions (XRDs) that currently exist.
  """
  compositeResourceDefinitions(
    """
    Only return XRDs that are owned by the supplied configuration revision ID.
    """
    revision: ID

    """
    Only return XRDs that aren't owned by a configuration revision. Takes
    precedence over revision when both are set.
    """
    dangling: Boolean = false
  ): CompositeResourceDefinitionConnection!

  """
  Compositions that currently exist.
  """
  compositions(
    """
    Only return Compositions that are owned by the supplied configuration
    revision ID.
    """
    revision: ID

    """
    Only return Compositions that aren't owned by a configuration revision.
    Takes precedence over revision when both are set.
    """
    dangling: Boolean = false
  ): CompositionConnection!

  """
  Kubernetes events.
  """
  events(
    "Only return events associated with the supplied ID."
    involved: ID
  ): EventConnection!
}

"""
A ProviderConnection represents a connection to providers.
"""
type ProviderConnection {
  "Connected nodes."
  nodes: [Provider!]

  "The total number of connected nodes."
  totalCount: Int!
}

"""
A ConfigurationConnection represents a connection to configurations.
"""
type ConfigurationConnection {
  "Connected nodes."
  nodes: [Configuration!]

  "The total number of connected nodes."
  totalCount: Int!
}

"""
A CompositeResourceDefinitionConnection represents a connection to composite
resource definitions (XRDs).
"""
type CompositeResourceDefinitionConnection {
  "Connected nodes."
  nodes: [CompositeResourceDefinition!]

  "The total number of connected nodes."
  totalCount: Int!
}

"""
A CompositionConnection represents a connection to compositions.
"""
type CompositionConnection {
  "Connected nodes."
  nodes: [Composition!]

  "The total number of connected nodes."
  totalCount: Int!
}
